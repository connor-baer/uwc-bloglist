// ==== TYPOGRAPHY ==== //

// Define all global font styles here.

// 1. Variables
// 2. font()

// 1. Variables //

$sans: "freight-sans-pro", "FreightSans Pro", "PT Sans", Arial, sans-serif;
$sans-normal: 500;
$sans-semibold: 600;
$sans-bold: 700;

$serif: "freight-text-pro", "FreightText Pro", "Times New Roman", Times, serif;
$serif-normal: 500;
$serif-semibold: 700;
$serif-bold: 900;

$macro: "freight-macro-pro", "FreightMacro Pro", "Roboto Slab", Georgia, serif;
$macro-normal: 500;
$macro-semibold: 600;
$macro-bold: 700;

$code: "Courier New", Courier, monospace;

$ms-base: 1rem;
$ms-ratio: 1.25;

$typi: (null: (12px, 2), x-small: 16px, medium: 20px, x-large: 24px);

// 2. underline() //

@mixin underline($bg-color: white, $bg-shade: base, $txt-color: $primary) {
  $selection-color: palette(blue, lighter);

  background-repeat: no-repeat, no-repeat, repeat-x;
  background-position: 0% 90%, 100% 90%, 0% 90%;
  background-size: .05em 1px, .05em 1px, 1px 1px;
  color: palette($txt-color);

  &:hover,
  &:focus {
    background-image: linear-gradient(palette($bg-color, $bg-shade), palette($bg-color, $bg-shade)), linear-gradient(palette($bg-color, $bg-shade), palette($bg-color, $bg-shade)), linear-gradient(palette($txt-color), palette($txt-color));
    text-shadow: .03em 0 palette($bg-color, $bg-shade), -.03em 0 palette($bg-color, $bg-shade), 0 .03em palette($bg-color, $bg-shade), 0 -.03em palette($bg-color, $bg-shade), .06em 0 palette($bg-color, $bg-shade), -.06em 0 palette($bg-color, $bg-shade), .09em 0 palette($bg-color, $bg-shade), -.09em 0 palette($bg-color, $bg-shade), .12em 0 palette($bg-color, $bg-shade), -.12em 0 palette($bg-color, $bg-shade), .15em 0 palette($bg-color, $bg-shade), -.15em 0 palette($bg-color, $bg-shade);

    &::selection {
      background: $selection-color;
      text-shadow: .03em 0 $selection-color, -.03em 0 $selection-color, 0 .03em $selection-color, 0 -.03em $selection-color, .06em 0 $selection-color, -.06em 0 $selection-color, .09em 0 $selection-color, -.09em 0 $selection-color, .12em 0 $selection-color, -.12em 0 $selection-color, .15em 0 $selection-color, -.15em 0 $selection-color;
    }

    &::before,
    &::after,
    *,
    *::before,
    *::after {
      text-shadow: none;
    }
  }
}

// 3. font() //

// The font() function accepts a style parameter.
// It is intended to promote consistency in the typography,
// therefore the number of styles should be kept to a minimum.
// Attributes which change between instances should not be defined here (e.g. color).

@mixin font($style: null) {
  a {
    @include underline();
  }

  @if $style == null {
    @warn "Mixin font() received no input! Please provide a style.";

    color: red;
    font-size: ms(10);
  }
  @else if $style == "title" {
    color: palette(gray, dark);
    font-size: ms(4);
    font-weight: $sans-bold;
    line-height: 1.4;

    a {
      background-size: .05em 2px, .05em 2px, 2px 2px;
    }

    .serif & {
      font-weight: $serif-bold;
    }

    .macro & {
      font-weight: $macro-bold;
    }
  }
  @else if $style == "header1" {
    margin-top: .1rem;
    margin-bottom: .5rem;
    clear: right;
    font-size: ms(3);
    font-weight: $sans-bold;
    line-height: 1.25;

    &::after {
      display: block;
      width: 2em;
      height: 0.16em;
      margin-top: .5rem;
      border-radius: 0.08em;
      background-color: palette($primary);
      content: "";
    }

    .serif & {
      font-weight: $serif-bold;
    }

    .macro & {
      font-weight: $macro-bold;
    }
  }
  @else if $style == "header2" {
    display: inline;
    margin-top: .5rem;
    margin-bottom: .25rem;
    font-size: ms(2);
    font-weight: $sans-bold;
    line-height: 1.25;

    a {
      background-size: .05em 2px, .05em 2px, 2px 2px;
    }

    .serif & {
      font-weight: $serif-bold;
    }

    .macro & {
      font-weight: $macro-bold;
    }
  }
  @else if $style == "header3" {
    display: inline;
    margin-top: .5rem;
    margin-bottom: .25rem;
    color: palette(gray, dark);
    font-size: ms(1);
    font-weight: $sans-bold;
    line-height: 1.25;

    .serif & {
      font-weight: $serif-bold;
    }

    .macro & {
      font-weight: $macro-bold;
    }
  }
  @else if $style == "body" {
    a {
      font-weight: $sans-semibold;
    }

    .serif & a {
      font-weight: $serif-semibold;
    }

    .macro & a {
      font-weight: $macro-semibold;
    }
  }
  @else if $style == "quote" {
    color: palette(gray, dark);
    font-size: ms(4);
    line-height: 1.4;

    a {
      background-size: .05em 2px, .05em 2px, 2px 2px;
      font-weight: $sans-bold;
    }

    .serif & a {
      font-weight: $serif-bold;
    }

    .macro & a {
      font-weight: $macro-bold;
    }
  }
  @else if $style == "app" {
    color: palette(gray);
    font-family: $sans;
    font-size: ms(-1);
    font-weight: $sans-semibold;
    letter-spacing: 0.25px;
    line-height: 1.5;
  }
  @else {
    @warn "Mixin font() received invalid input! This style does not exist.";

    color: red;
    font-size: ms(10);
  }
}
